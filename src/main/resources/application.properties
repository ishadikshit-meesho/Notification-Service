spring.application.name=server

#Turn off Spring boot banner
spring.main.banner-mode=off

#Reduce logging level, set it to 'warn'
logging.level.root=warn

# Add logging configs to display SQL statements
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# Configure JPA/Hibernate to auto create the tables
# the "update" config will keep existing data in the table
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.internal.NoCachingRegionFactory
spring.jpa.open-in-view=false

# JDBC Properties
spring.datasource.url=jdbc:mysql://localhost:3306/notificationServerDB
spring.datasource.username=notificationServer
spring.datasource.password=server@123


#Kafka Properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#redis Properties
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.redis.time-to-live=600000
spring.cache.cache-names=sms_requests
spring.cache.redis.key-prefix=notify


